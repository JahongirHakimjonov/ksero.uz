# Generated by Django 5.1.5 on 2025-02-17 09:58

import apps.shared.encoders.encoder
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BotUsers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "telegram_id",
                    models.BigIntegerField(unique=True, verbose_name="Telegram ID"),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Username"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="First Name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Last Name"
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Full Name"
                    ),
                ),
                (
                    "phone",
                    models.BigIntegerField(
                        blank=True, null=True, unique=True, verbose_name="Phone Number"
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        choices=[("uz", "Uzbek"), ("ru", "Russian"), ("en", "English")],
                        default="uz",
                        max_length=10,
                        verbose_name="Language",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("moderator", "Moderator"),
                            ("user", "User"),
                        ],
                        default="user",
                        max_length=10,
                        verbose_name="Role",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bot User",
                "verbose_name_plural": "Bot Users",
                "db_table": "bot_users",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SmsConfirm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("code", models.IntegerField(verbose_name="Kod")),
                (
                    "try_count",
                    models.IntegerField(default=0, verbose_name="Urinishlar soni"),
                ),
                (
                    "resend_count",
                    models.IntegerField(
                        default=0, verbose_name="Qayta yuborishlar soni"
                    ),
                ),
                (
                    "phone",
                    models.CharField(max_length=255, verbose_name="Telefon raqami"),
                ),
                (
                    "expire_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="Muddati"),
                ),
                (
                    "unlock_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Bloklanish vaqti"
                    ),
                ),
                (
                    "resend_unlock_time",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Qayta yuborish bloklanish vaqti",
                    ),
                ),
            ],
            options={
                "verbose_name": "SMS tasdiqlash",
                "verbose_name_plural": "SMS tasdiqlashlar",
                "db_table": "sms_confirm",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="Telefon raqami",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="Foydalanuvchi nomi"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatars/",
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Admin"),
                            ("USER", "Foydalanuvchi"),
                            ("SUPER_ADMIN", "Super admin"),
                        ],
                        default="USER",
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "register_type",
                    models.CharField(
                        choices=[
                            ("PHONE", "Telefon"),
                            ("GOOGLE", "Google"),
                            ("APPLE", "Apple"),
                        ],
                        db_index=True,
                        default="PHONE",
                        max_length=20,
                        verbose_name="Ro'yxatdan o'tish turi",
                    ),
                ),
                (
                    "sos_count",
                    models.PositiveBigIntegerField(
                        blank=True,
                        db_index=True,
                        default=0,
                        null=True,
                        verbose_name="SOS count",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Foydalanuvchi",
                "verbose_name_plural": "Foydalanuvchilar",
                "db_table": "users",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ActiveSessions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ip",
                    models.GenericIPAddressField(
                        db_index=True, verbose_name="IP address"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(db_index=True, verbose_name="User agent"),
                ),
                (
                    "location",
                    models.JSONField(
                        blank=True,
                        encoder=apps.shared.encoders.encoder.PrettyJSONEncoder,
                        null=True,
                        verbose_name="Location",
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last activity"
                    ),
                ),
                (
                    "fcm_token",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="FCM token",
                    ),
                ),
                (
                    "refresh_token",
                    models.TextField(db_index=True, verbose_name="Refresh token"),
                ),
                (
                    "access_token",
                    models.TextField(db_index=True, verbose_name="Access token"),
                ),
                (
                    "expired_at",
                    models.DateTimeField(
                        blank=True, db_index=True, null=True, verbose_name="Expired at"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True,
                        encoder=apps.shared.encoders.encoder.PrettyJSONEncoder,
                        null=True,
                        verbose_name="Data",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Active session",
                "verbose_name_plural": "Active sessions",
                "db_table": "active_sessions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "banner",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="notifications",
                        verbose_name="Banner",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="Title"
                    ),
                ),
                (
                    "title_uz",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "title_ru",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "title_en",
                    models.CharField(
                        db_index=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                ("message", models.TextField(db_index=True, verbose_name="Message")),
                (
                    "message_uz",
                    models.TextField(db_index=True, null=True, verbose_name="Message"),
                ),
                (
                    "message_ru",
                    models.TextField(db_index=True, null=True, verbose_name="Message"),
                ),
                (
                    "message_en",
                    models.TextField(db_index=True, null=True, verbose_name="Message"),
                ),
                ("is_send", models.BooleanField(default=False, verbose_name="Is Send")),
                ("is_read", models.BooleanField(default=False, verbose_name="Is Read")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SINGLE", "Single"),
                            ("ALL", "All"),
                            ("NONE", "None"),
                        ],
                        default="SINGLE",
                        max_length=20,
                        verbose_name="Type",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "db_table": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ResetToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "token",
                    models.CharField(max_length=255, unique=True, verbose_name="Token"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Foydalanuvchi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tokenni tiklash",
                "verbose_name_plural": "Tokenni tiklash",
                "db_table": "reset_token",
            },
        ),
        migrations.CreateModel(
            name="UserData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("PHONE", "Telefon"),
                            ("GOOGLE", "Google"),
                            ("APPLE", "Apple"),
                        ],
                        db_index=True,
                        max_length=20,
                        verbose_name="Provider",
                    ),
                ),
                (
                    "uid",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="Provider ID"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        db_index=True,
                        encoder=apps.shared.encoders.encoder.PrettyJSONEncoder,
                        null=True,
                        verbose_name="Extra data",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User data",
                "verbose_name_plural": "User data",
                "db_table": "user_data",
                "ordering": ["-created_at"],
            },
        ),
    ]
